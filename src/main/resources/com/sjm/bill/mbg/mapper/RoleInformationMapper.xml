<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjm.bill.mbg.mapper.RoleInformationMapper">
  <resultMap id="BaseResultMap" type="com.sjm.bill.mbg.model.RoleInformation">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="DATE" property="updateTime" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
    <result column="DEFAULT_ROLE" jdbcType="INTEGER" property="defaultRole" />
    <result column="EXT1" jdbcType="VARCHAR" property="ext1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ROLE_NAME, CREATE_TIME, UPDATE_TIME, STATE, DEFAULT_ROLE, EXT1
  </sql>
  <select id="selectByExample" parameterType="com.sjm.bill.mbg.model.RoleInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ROLE_INFORMATION
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ROLE_INFORMATION
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjm.bill.mbg.model.RoleInformationExample">
    delete from ROLE_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjm.bill.mbg.model.RoleInformation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ROLE_INFORMATION (ROLE_NAME, CREATE_TIME, UPDATE_TIME, 
      STATE, DEFAULT_ROLE, EXT1
      )
    values (#{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{state,jdbcType=INTEGER}, #{defaultRole,jdbcType=INTEGER}, #{ext1,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sjm.bill.mbg.model.RoleInformation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ROLE_INFORMATION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="defaultRole != null">
        DEFAULT_ROLE,
      </if>
      <if test="ext1 != null">
        EXT1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="defaultRole != null">
        #{defaultRole,jdbcType=INTEGER},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjm.bill.mbg.model.RoleInformationExample" resultType="java.lang.Integer">
    select count(*) from ROLE_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ROLE_INFORMATION
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.defaultRole != null">
        DEFAULT_ROLE = #{record.defaultRole,jdbcType=INTEGER},
      </if>
      <if test="record.ext1 != null">
        EXT1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ROLE_INFORMATION
    set ID = #{record.id,jdbcType=BIGINT},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      STATE = #{record.state,jdbcType=INTEGER},
      DEFAULT_ROLE = #{record.defaultRole,jdbcType=INTEGER},
      EXT1 = #{record.ext1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjm.bill.mbg.model.RoleInformation">
    update ROLE_INFORMATION
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="defaultRole != null">
        DEFAULT_ROLE = #{defaultRole,jdbcType=INTEGER},
      </if>
      <if test="ext1 != null">
        EXT1 = #{ext1,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjm.bill.mbg.model.RoleInformation">
    update ROLE_INFORMATION
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      STATE = #{state,jdbcType=INTEGER},
      DEFAULT_ROLE = #{defaultRole,jdbcType=INTEGER},
      EXT1 = #{ext1,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectPage" resultMap="BaseResultMap">
    SELECT
        ID,ROLE_NAME,CREATE_TIME,UPDATE_TIME,STATE,DEFAULT_ROLE,EXT1
    FROM
        ROLE_INFORMATION
    LIMIT #{page},#{size};
  </select>

  <select id="count" resultType="java.lang.Integer">
    SELECT
        count(1)
    FROM
        ROLE_INFORMATION
  </select>

  <!--查询树形-->
  <resultMap id="TreeResultMap" type="com.sjm.bill.dto.JurisdictionInformationDTO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="jurisdiction_name" jdbcType="VARCHAR" property="jurisdictionName" />
    <result column="parent_node_id" jdbcType="BIGINT" property="parentNodeId" />
    <result column="is_modify" jdbcType="INTEGER" property="isModify" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="label_name" jdbcType="VARCHAR" property="labelName" />
    <result column="is_show" jdbcType="BIT" property="isShow" />
    <result column="priority" jdbcType="BIGINT" property="priority" />
    <collection ofType="com.sjm.bill.mbg.model.JurisdictionInformation" property="childs">
      <id column="cid" jdbcType="BIGINT" property="id" />
      <result column="cjurisdiction_name" jdbcType="VARCHAR" property="jurisdictionName" />
      <result column="cparent_node_id" jdbcType="BIGINT" property="parentNodeId" />
      <result column="cis_modify" jdbcType="INTEGER" property="isModify" />
      <result column="clink" jdbcType="VARCHAR" property="link" />
      <result column="clabel_name" jdbcType="VARCHAR" property="labelName" />
      <result column="cis_show" jdbcType="BIT" property="isShow" />
      <result column="cpriority" jdbcType="BIGINT" property="priority" />
    </collection>
  </resultMap>
  <select id="selectByIdToJurisdiction" parameterType="java.lang.Long" resultMap="TreeResultMap">
    SELECT
        p.ID AS id,
        p.JURISDICTION_NAME AS jurisdiction_name,
        p.PARENT_NODE_ID AS parent_node_id,
        p.IS_MODIFY AS is_modify,
        p.LINK AS link,
        p.LABEL_NAME AS label_name,
        p.IS_SHOW AS is_show,
        p.PRIORITY AS priority,
        c.ID AS cid,
        c.JURISDICTION_NAME AS cjurisdiction_name,
        c.PARENT_NODE_ID AS cparent_node_id,
        c.IS_MODIFY AS cis_modify,
        c.LINK AS clink,
        c.LABEL_NAME AS clabel_name,
        c.IS_SHOW AS cis_show,
        c.PRIORITY AS cpriority
    FROM
        ROLE_INFORMATION r
        LEFT JOIN ROLE_JURISDICTION_FROM f ON r.ID = f.ROLE_ID
        LEFT JOIN JURISDICTION_INFORMATION p ON p.ID = f.JURISDICTION_ID
        LEFT JOIN JURISDICTION_INFORMATION c ON p.ID = c.PARENT_NODE_ID
    WHERE
        p.PARENT_NODE_ID = - 1
        AND r.ID = #{id}
    ORDER BY priority ASC ,cpriority ASC
  </select>
</mapper>